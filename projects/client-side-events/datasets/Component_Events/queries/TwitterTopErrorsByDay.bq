#standardSQL

WITH

allDisplays AS (
SELECT
  errors.event, errors.event_details, errors.display_id, errors.version, errors.date AS date
  FROM
  (
    SELECT event, event_details, display_id, version, DATE(ts) AS date
    FROM `client-side-events.Component_Events.rise_twitter_events`
    WHERE display_id != "xxxxxx"
 ) displays
  LEFT JOIN
  (
    SELECT * FROM
    (
      /* Select displays that have component errors */
      SELECT event, event_details, display_id, version, DATE(ts) AS date
      FROM `client-side-events.Component_Events.rise_twitter_events`
      WHERE (event = "Error")
      and STARTS_WITH(event_details, "Twitter Credentials unauthenticated") IS FALSE

      UNION ALL

      /* Select displays that have module errors */
      SELECT event, event_details, display_id, version, DATE(ts) AS date
      FROM `client-side-events.Module_Events.tweet_events`
      WHERE event = "error"
      AND STARTS_WITH(event_details, "Credentials do not exist") IS FALSE
    )
  ) errors
  ON displays.display_id = errors.display_id AND displays.date = errors.date
  /* CHANGE THIS DATE*/
  WHERE errors.date = "1111-11-11"
  ORDER BY errors.date DESC
)

SELECT COUNT(distinct display_id) as display_count, event, SUBSTR(event_details, 0, 200) AS details
FROM allDisplays
GROUP BY event, details
ORDER BY display_count DESC
