#standardSQL

SELECT
COUNT(displays.display_id) as numberOfDisplays,
COUNT(errors.display_id) as errorCount,
(1 - (COUNT(errors.display_id)/COUNT(displays.display_id))) as Reliability,
cast(displays.date as String) as usage_date
FROM
(
  SELECT display_id, DATE(ts) AS date
  FROM `client-side-events.Component_Events.rise_twitter_events`
  WHERE display_id != "xxxxxx"
  GROUP BY display_id, date
) displays
LEFT JOIN
(
  SELECT * FROM
  (
    /* Select displays that have component errors */
    SELECT display_id, DATE(ts) AS date
    FROM `client-side-events.Component_Events.rise_twitter_events`
    WHERE (event = "Error") and STARTS_WITH(event_details, "Twitter Credentials unauthenticated") IS FALSE
    GROUP BY display_id, date

    UNION ALL

    /* Select displays that have module errors */
    SELECT display_id, DATE(ts) AS date
    FROM `client-side-events.Module_Events.tweet_events`
    WHERE event = "error" and STARTS_WITH(event_details, "Credentials do not exist") IS FALSE
    GROUP BY display_id, date
  )
  GROUP BY display_id, date
) errors
ON displays.display_id = errors.display_id AND displays.date = errors.date
GROUP BY displays.date
ORDER BY displays.date DESC;
