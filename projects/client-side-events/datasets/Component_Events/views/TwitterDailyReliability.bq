#standardSQL

SELECT 
COUNT(displays.display_id) as numberOfDisplays, 
COUNT(errors.display_id) as errorCount, 
(1 - (COUNT(errors.display_id)/COUNT(displays.display_id))) as Reliability, 
displays.date as usage_data 
FROM 
(
  SELECT display_id, DATE(ts) AS date 
  FROM `client-side-events.Component_Events.rise_twitter_events` 
  WHERE display_id != "xxxxxx" 
  AND company_id NOT IN ("7fa5ee92-7deb-450b-a8d5-e5ed648c575f", "fee1f642-cdd1-4bc4-8f93-1fc97cb00d55", "a9575a1e-00a8-4d87-b640-979d0623f844") 
  GROUP BY display_id, date
) displays
LEFT JOIN
(
  SELECT * FROM 
  (
    /* Select displays that have component errors */
    SELECT display_id, DATE(ts) AS date 
    FROM `client-side-events.Component_Events.rise_twitter_events` 
    WHERE (event = "Error") 
    GROUP BY display_id, date
    
    UNION ALL
    
    /* Select displays that have module errors */
    SELECT display_id, DATE(ts) AS date 
    FROM `client-side-events.Module_Events.tweet_events` 
    WHERE event = "Error"
    GROUP BY display_id, date
    
    UNION ALL

    /* Select displays that have Authorization errors but should be auhtorized by player */
    SELECT events.display_id, Date(events.ts) as date FROM 
    (
      /* Select the player config event that was valid at the time of the Unauthorized log */
      SELECT events.display_id as display_id, events.ts as event_ts, max(configs.ts) as config_ts
      FROM `client-side-events.Component_Events.rise_twitter_events` events
      LEFT JOIN `client-side-events.Player_Data.configuration` configs
      ON events.display_id = configs.display_id AND events.ts > configs.ts
      GROUP BY events.display_id, events.ts
    ) max_config_ts
    LEFT JOIN `client-side-events.Component_Events.rise_twitter_events` events
    ON max_config_ts.display_id = events.display_id AND max_config_ts.event_ts = events.ts
    LEFT JOIN `client-side-events.Player_Data.configuration` configs
    ON events.display_id = configs.display_id AND max_config_ts.config_ts = configs.ts
    WHERE configs.offline_subscription = TRUE AND events.event = 'Unauthorized'
    GROUP BY events.display_id, date
  ) 
  GROUP BY display_id, date
) errors 
ON displays.display_id = errors.display_id AND displays.date = errors.date
GROUP BY displays.date
ORDER BY displays.date DESC;