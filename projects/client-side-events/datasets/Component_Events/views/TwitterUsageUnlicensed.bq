#standardSQL

/* Select displays that have Authorization errors but should be auhtorized by player */
SELECT COUNT(DISTINCT events.display_id) as usage, Date(events.ts) as date FROM 
(
  /* Select the player config event that was valid at the time of the Unauthorized log */
  SELECT events.display_id as display_id, events.ts as event_ts, max(configs.ts) as config_ts
  FROM `client-side-events.Component_Events.rise_twitter_events` events
  LEFT JOIN `client-side-events.Player_Data.configuration` configs
  ON events.display_id = configs.display_id AND events.ts > configs.ts
  GROUP BY events.display_id, events.ts
) max_config_ts
LEFT JOIN `client-side-events.Component_Events.rise_twitter_events` events
ON max_config_ts.display_id = events.display_id AND max_config_ts.event_ts = events.ts
LEFT JOIN `client-side-events.Player_Data.configuration` configs
ON events.display_id = configs.display_id AND max_config_ts.config_ts = configs.ts
WHERE configs.offline_subscription = FALSE AND events.event = 'Unauthorized'
GROUP BY date