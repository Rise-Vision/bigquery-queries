SELECT * FROM
(SELECT
  INTEGER(usageCount) as usageCount,
  IFNULL(INTEGER(errorCount),0) AS errorCount,
  ((usageCount-IFNULL(INTEGER(errorCount),0))/usageCount) AS Reliability,
  usage.date as usage_date
FROM (
  SELECT
    COUNT(DISTINCT display_play.display_id) AS usageCount,
    DATE(display_play.ts) AS date
  FROM (
    SELECT
      display_id,
      ts
    FROM
      TABLE_DATE_RANGE(Widget_Events.video_v2_events, DATE_ADD(CURRENT_TIMESTAMP(), -10, 'DAY'), CURRENT_TIMESTAMP())
    WHERE
      event = 'configuration'
      AND event_details NOT LIKE "%(rls)%"
      AND display_id NOT IN ('preview', '"display_id"', '"displayId"')
      AND (version='2.0.0' OR version='1.1.0')) AS display_play
  INNER JOIN (
    SELECT
      display_id
    FROM
      TABLE_DATE_RANGE([client-side-events:Installer_Events.events], DATE_ADD(CURRENT_TIMESTAMP(), -10, "DAY"), CURRENT_TIMESTAMP())
    GROUP BY
      display_id) AS v3_displays
  ON
    display_play.display_id=v3_displays.display_id
  GROUP BY
    date) usage
OUTER JOIN EACH (
  SELECT
    COUNT(DISTINCT display_id) AS errorCount,
    DATE(ts) AS date
  FROM (
    SELECT
      displays_with_error.display_id AS display_id,
      displays_with_error.error AS error,
      displays_with_error.ts AS ts
    FROM (
      SELECT
        display_id,
        error,
        ts FROM
        -- Use 'event' as the error message.
        (
        SELECT
          display_id,
          event AS error,
          ts
        FROM
          TABLE_DATE_RANGE(Widget_Events.video_v2_events, DATE_ADD(CURRENT_TIMESTAMP(), -10, 'DAY'), CURRENT_TIMESTAMP())
        WHERE
          event IN ('rise storage error',
            'storage api error')
          AND (version='2.0.0' OR version='1.1.0')),
        -- Use 'event_details' as the error message, or 'event' if 'event_details' is NULL.
        (
        SELECT
          display_id,
          event_details AS error,
          ts
        FROM
          TABLE_DATE_RANGE(Widget_Events.video_v2_events, DATE_ADD(CURRENT_TIMESTAMP(), -10, 'DAY'), CURRENT_TIMESTAMP())
        WHERE
          event IN ('player error')
          AND (event_details = 'video - Error loading media: File could not be played'
          OR event_details CONTAINS 'MEDIA_ERR')
          AND file_url NOT LIKE "risemedialibrary-%"
          AND (version='2.0.0' OR version='1.1.0')),
        (
        SELECT
          display_id,
          CONCAT('rise cache error - ', event_details) AS error,
          ts
        FROM
          TABLE_DATE_RANGE(Widget_Events.video_v2_events, DATE_ADD(CURRENT_TIMESTAMP(), -10, 'DAY'), CURRENT_TIMESTAMP())
        WHERE
          event IN ('rise cache error')
          AND event_details != 'The request failed with status code: 404'
          AND event_details IS NOT NULL
          AND (version='2.0.0' OR version='1.1.0'))
      WHERE
        display_id NOT IN ('preview',
          '"display_id"',
          '"displayId"') ) AS displays_with_error
    INNER JOIN (
      SELECT
        display_id
      FROM
        TABLE_DATE_RANGE([client-side-events:Installer_Events.events], DATE_ADD(CURRENT_TIMESTAMP(), -10, "DAY"), CURRENT_TIMESTAMP())
      GROUP BY
        display_id) AS v3_displays
    ON
      displays_with_error.display_id=v3_displays.display_id)
  GROUP BY
    date) AS error
ON
  usage.date=error.date
ORDER BY
  usage.date),
(SELECT
    * from[client-side-events:Aggregate_Tables.VideoDailyReliability]
  WHERE
    usage_date < DATE(DATE_ADD(CURRENT_TIMESTAMP(), -10, "DAY")))
